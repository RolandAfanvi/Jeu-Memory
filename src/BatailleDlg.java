
import javax.swing.DefaultListModel;
import javax.swing.JFrame;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ka907986
 */
public class BatailleDlg extends javax.swing.JDialog {

    /**
     * Creates new form BatailleDlg
     */
    //Attribuuts 
    private LesJoueurs lj;       //collection des joueurs (en entrée)
    private int indj;            //indice du joueur courant (en entrée)
    private Joueur adversaire;   //adversaire sélectionné (en sortie)
    private boolean ok;          // action faite ou non (en sortie)
    private Bataille b;          // action réalisée

    private BatailleDlg(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    //Accesseur
    public boolean isOk() {        return ok;    }    
    public Joueur getAdversaire(){return adversaire;    }
    public Bataille getBataille(){ return b;}
    
    
    public BatailleDlg(java.awt.Frame parent, boolean modal, LesJoueurs lj, int jc) {
        super(parent, modal);
        initComponents();
        this.lj = lj;
        this.indj = jc;
        this.ok=false;
        this.adversaire= null;
        this.b=null;
        initListeJ(); 
        Annuler.setText("Annuler");
        Annuler.setVisible(false); // aucune bataille existe
        MessageJ.setText(lj.getJoueur(indj).getPseudo()+" va effectuer une bataille contre : ");
    }
    
     // Methodes
    
    public void initListeJ()
    {
        // remplit la JList avec ls pseudos des joueurs *
        DefaultListModel mod =  new DefaultListModel();
        ListJ.setModel(mod);
        for(int i=0; i<this.lj.getNbJoueurs();i++)
            mod.addElement(this.lj.getJoueur(i).getPseudo());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Joueur = new javax.swing.JLabel();
        Adversaire = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InfosCarte1 = new javax.swing.JTextArea();
        Carte1 = new javax.swing.JButton();
        Carte2 = new javax.swing.JButton();
        Ic2 = new javax.swing.JScrollPane();
        InfosCarte2 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        Vainqueur = new javax.swing.JLabel();
        Annuler = new javax.swing.JButton();
        Demarrer = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        MessageJ = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListJ = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        Joueur.setText("jLabel1");
        jPanel2.add(Joueur);

        Adversaire.setText("jLabel2");
        jPanel2.add(Adversaire);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setLayout(new java.awt.GridLayout(1, 4));

        InfosCarte1.setColumns(20);
        InfosCarte1.setRows(5);
        jScrollPane1.setViewportView(InfosCarte1);

        jPanel3.add(jScrollPane1);
        jPanel3.add(Carte1);
        jPanel3.add(Carte2);

        InfosCarte2.setColumns(20);
        InfosCarte2.setRows(5);
        Ic2.setViewportView(InfosCarte2);

        jPanel3.add(Ic2);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.GridLayout(1, 3));

        Vainqueur.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Vainqueur.setText("jLabel1");
        jPanel4.add(Vainqueur);

        Annuler.setText("Annuler/Fermer");
        Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerActionPerformed(evt);
            }
        });
        jPanel4.add(Annuler);

        Demarrer.setText("Demarrer");
        Demarrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DemarrerActionPerformed(evt);
            }
        });
        jPanel4.add(Demarrer);

        getContentPane().add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        MessageJ.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MessageJ.setText("jLabel1");
        jPanel5.add(MessageJ);

        ListJ.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListJ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListJMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListJ);

        jPanel5.add(jScrollPane2);

        getContentPane().add(jPanel5, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListJMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListJMouseClicked
        // TODO add your handling code here:
        int i  =ListJ.getSelectedIndex();
        if(i!=-1)
        {
            // on test  si ce 'est pas le joueur courant 
            Joueur jo= this.lj.getJoueur(this.indj);
            if(i== this.lj.getIndiceJoueur(jo))
                Joueur.setText("Sélectionner un autre joueur !");
            else
            {
                this.adversaire= this.lj.getJoueur(i);
                this.b= new Bataille(jo,adversaire);
                //interface
                Annuler.setVisible(true);
                Joueur.setText(jo.getPseudo());
                Adversaire.setText(adversaire.getPseudo());
                InfosCarte1.append("Paquet de "+jo.getPseudo()+"\n"+jo.getPaquet().toString()+"\n");
                InfosCarte1.append("     -------------------\n");
                InfosCarte2.append("Paquet de "+this.adversaire.getPseudo()+"\n"+this.adversaire.getPaquet().toString()+"\n");
                InfosCarte2.append("     -------------------\n");
            }
                    
        }
        
    }//GEN-LAST:event_ListJMouseClicked

    private void DemarrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DemarrerActionPerformed
        // TODO add your handling code here:
        Joueur jo = this.lj.getJoueur(indj);
        if(jo!=null && this.adversaire!= null)
        {
            // Affichage d'information dans les zones d'edition 
            InfosCarte1.append(jo.getPseudo()+" joue \n"+jo.getPaquet().getPerso(0)+"\n");
            InfosCarte2.append(this.adversaire.getPseudo()+" joue \n"+this.adversaire.getPaquet().getPerso(0)+"\n");
            //on execute la bataille
            int res = this.b.execute(); //retourne 0,1,2
            switch(res)
            {
                case 1 :
                {
                    InfosCarte1.append(jo.getPseudo()+" gagne\n");
                    InfosCarte2.append(this.adversaire.getPseudo()+" perd\n");
                    Vainqueur.setText(jo.getPseudo());
                    break;
                }
                
                case 2 :
                {
                    InfosCarte1.append(jo.getPseudo()+" perd\n");
                    InfosCarte2.append(this.adversaire.getPseudo()+" gagne\n");
                    Vainqueur.setText(this.adversaire.getPseudo());
                    break;
                }
                
                case 0 :
                {
                   // InfosCarte1.append(jo.getPseudo()+" perd\n");
                   // InfosCarte2.append(this.adversaire.getPseudo()+" gagne\n");
                    Vainqueur.setText("Aucun gagnant");
                    break;
                }
                
            }
            // on raffiche les cartes du joueur 
            InfosCarte1.append(jo.getPaquet().toString()+"\n");
            InfosCarte1.append("     -------------------\n");
            InfosCarte2.append(this.adversaire.getPaquet().toString()+"\n");
            InfosCarte2.append("     -------------------\n");
            LesPersonnages pjo = jo.getPaquet();
            LesPersonnages pad = this.adversaire.getPaquet();
            if(pjo.getTaille()==0 && pad.getTaille()>0)
            {
                Vainqueur.setText(this.adversaire.getPseudo()+" à gagné");
                Demarrer.setEnabled(false);
                Annuler.setText("Fermer");
                
            }
            else
                if(pjo.getTaille()>0 && pad.getTaille()==0)
                {
                    Vainqueur.setText(jo.getPseudo()+" à gagné");
                    Demarrer.setEnabled(false);
                    Annuler.setText("Fermer");
                }
                else 
                {
                    pjo.getPerso(0).setImgBouton(Carte1);
                    pad.getPerso(0).setImgBouton(Carte2);
                }
            
            
            this.ok=true;          
        }
    }//GEN-LAST:event_DemarrerActionPerformed

    private void AnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerActionPerformed
        // TODO add your handling code here:
        this.ok=false;
        if (Annuler.getText().equals("Annuler"))
            this.b.setDeroulement("Bataille interrompue en cours de partie");
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_AnnulerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BatailleDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BatailleDlg dialog = new BatailleDlg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Adversaire;
    private javax.swing.JButton Annuler;
    private javax.swing.JButton Carte1;
    private javax.swing.JButton Carte2;
    private javax.swing.JButton Demarrer;
    private javax.swing.JScrollPane Ic2;
    private javax.swing.JTextArea InfosCarte1;
    private javax.swing.JTextArea InfosCarte2;
    private javax.swing.JLabel Joueur;
    private javax.swing.JList<String> ListJ;
    private javax.swing.JLabel MessageJ;
    private javax.swing.JLabel Vainqueur;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
